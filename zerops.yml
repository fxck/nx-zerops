# gui:
#   build:

#     # build image
#     base: [ nodejs@14 ]
#     prepare:
#       - npm i -g strapi

#     build:
#       - npm i
#       - npm run build monorepoonzerops
#     deploy:
#       - ./dist/apps/monorepoonzerops
#     cache: [ node_modules ]

#   run:
#     start:

api:
  build:

    base: [ nodejs@14 ]
    prepare:
      - npm i -g @nestjs/cli

    build:
      - nest --help
      - npm i --loglevel=error
      - npm run build api --loglevel=error
    deploy:
      - ./dist/apps/api
      - node_modules
      - package.json
    cache: [ node_modules ]
  run:
    # prepare:
    #   - touch foo.txt
    start: node dist/apps/api/main.js

api2:
  build:

    base: [ nodejs@14 ]
    prepare:
      - npm i -g @nestjs/cli

    build:
      - nest --help
      - npm i --loglevel=error
      - npm run build api --loglevel=error
    deploy:
      - ./dist/apps/api
      - node_modules
      - package.json
    cache: [ node_modules ]
  run:
    # prepare:
    #   - touch foo.txt
    start: node dist/apps/api/main.js

# hostname of your service
# (supports monorepositories! just add
# one service section after the other)
nodejs6:
  # ==== how to build your application ====
  build:
    # select what technology should the
    # build container be based on, can
    # be different from service technology
    # see docs for full list
    base: [ nodejs@14 ]

    # *optional* add additional dependencies
    # on top of base technology (combination
    # will be cached for next build)
    # prepare:
    #   - apt-get something
    #   - curl otherthing

    # build your application
    build:
      - npm i
      - npm run build

    # select which files / folders to deploy
    # after the build succesfully finished
    deploy: [ dist, package.json ]

    # *optional*: which files / folders
    # to cache for the next use
    cache: [ node_modules ]

  # ==== how to run your application ====
  run:
    # *optional* install dependencies that your
    # runtime service requires (will be cached)
    # prepare:
    #   - apt-get something
    #   - curl otherthing

    # *optional*: triggered before each start/restart
    # of your application, to eg. clean cache
    # init:
    #  - rm -rf ./cache

    # how to start your application
    start: npm start
